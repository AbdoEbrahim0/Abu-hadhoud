#include <iostream>
using namespace std;
class clsPerson
{
private:
    string _FirstName;
public:
    void SetFirstName(string FirstName) {
        _FirstName = FirstName;
    }
    string GetFirstName() {
        return _FirstName;
    }
    __declspec(property(get = GetFirstName, put = SetFirstName))
        string KOKO;
};

class Calculator
{

private:
    stack<int>stk;
    int res = 0;

public:
    int getVal()
    {
        return stk.top();
    }
    void setVal(int x)
    {
        res = x;
    }

    int add(int x)
    {
        stk.push(res + x); 
        setVal(stk.top());
        return res;
    }
    int sub(int x)
    {
        stk.push(res - x);
        setVal(stk.top());
        return res;
    }
    int multiply(int x)
    {
        stk.push(res * x);
        setVal(stk.top());
        return res;
    }
    int divideOn(int x)
    {
        if (x == 0)
            cout << "can not divide on 0";
        stk.push(res / x);
        setVal(stk.top());
        return res;
    }
    void clear()
    {
        setVal(0);
        stk.push(0);
    }
    void cancelLastOperation()
    {
        stk.pop();
    }
};


int main()
{
    //clsPerson Person1;
    //Person1.SetFirstName("Mohammed");
    //cout << Person1.GetFirstName() << endl;
    ////instead of the above we only write this
    //Person1.KOKO = "Mohammed";
    //cout << Person1.KOKO;
    //system("pause>0");

    Calculator C1;
    cout<< C1.add(10)<<"\n";
    cout << C1.add(20) << "\n";
    C1.clear();
    
    cout << C1.add(10) << "\n";
    cout << C1.add(100) << "\n";
    cout << C1.sub(20) << "\n";
    cout << C1.divideOn(2) << "\n";
    cout << C1.multiply(3) << "\n";

    C1.cancelLastOperation();

    cout << C1.getVal() << "\n";

    return 0;
};
